[
    {
        "id": "375ee1d6cf6e3891",
        "type": "subflow",
        "name": "rpc-sync",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "a72d2803344a446d"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 40,
                "wires": [
                    {
                        "id": "ab5c9b3893934684",
                        "port": 0
                    }
                ]
            },
            {
                "x": 820,
                "y": 100,
                "wires": [
                    {
                        "id": "ab5c9b3893934684",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "actionType",
                "type": "str",
                "value": "exec"
            },
            {
                "name": "topicPath",
                "type": "str",
                "value": "topic"
            }
        ],
        "meta": {
            "module": "rpc-sync",
            "type": "rpc-sync"
        },
        "color": "#A6BBCF",
        "icon": "node-red/arrow-in.svg"
    },
    {
        "id": "a72d2803344a446d",
        "type": "function",
        "z": "375ee1d6cf6e3891",
        "name": "generate_url",
        "func": "\nconst JOBCTL_HOST = global.get(\"JOBCTL_HOST\")\nconst JOBCTL_SERVICE_IP = JOBCTL_HOST.IP\nconst JOBCTL_SERVICE_HOST_HTTP_PORT = JOBCTL_HOST.HTTP_PORT\nconst actionType = env.get(\"actionType\")\n\nconst topicPath = env.get(\"topicPath\")\nconst topic = encodeURIComponent(JSON.stringify(RED.util.getPropByPath(msg, topicPath)))\n\nmsg.joburl = `http://${JOBCTL_SERVICE_IP}:${JOBCTL_SERVICE_HOST_HTTP_PORT}/${actionType}/${topic}`\nmsg.topic = topic\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 80,
        "wires": [
            [
                "fc01a190e21bcf85"
            ]
        ]
    },
    {
        "id": "fc01a190e21bcf85",
        "type": "http request",
        "z": "375ee1d6cf6e3891",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{joburl}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "x-topic",
                "valueType": "msg",
                "valueValue": "topic"
            }
        ],
        "x": 370,
        "y": 80,
        "wires": [
            [
                "ab5c9b3893934684"
            ]
        ]
    },
    {
        "id": "ab5c9b3893934684",
        "type": "function",
        "z": "375ee1d6cf6e3891",
        "name": "JSON.parse",
        "func": "if (msg.statusCode == \"200\") {\n    if (msg.payload) {\n        try {\n            msg.payload = JSON.parse(msg.payload)\n        } catch (error) {\n        }\n    }\n    return [msg, null]\n}else{\n\n}\n\nreturn [null, msg];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 80,
        "wires": [
            [],
            []
        ]
    }
]