[
    {
        "id": "d6f01b04a12d7282",
        "type": "subflow",
        "name": "topic-add",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "a27285317db43ec7"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "a27285317db43ec7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "topicPath",
                "type": "str",
                "value": "payload.topic"
            }
        ],
        "meta": {
            "module": "topic-add",
            "type": "topic-add"
        },
        "color": "#DEB887",
        "icon": "node-red/db.svg"
    },
    {
        "id": "a27285317db43ec7",
        "type": "function",
        "z": "d6f01b04a12d7282",
        "name": "topic_add",
        "func": "\nfunction getPropByPath(obj, path) {\n    const pathArr = path.split('/');\n    let current = obj;\n    for (const prop of pathArr) {\n        if (current[prop] === undefined) {\n            return undefined;\n        }\n        current = current[prop];\n    }\n    return current;\n}\n\nconst topicPath = env.get(\"topicPath\") //ex.msg.payload.topic \nconst topicTicket = getPropByPath(msg, topicPath)//{topic: \"\",param: { }}\ntopicTicket.uuid = crypto.randomUUID()\n\n\nif (!topicTicket) return msg\n//{topicname:[{topic:\"\",param: {}}}]}\nconst topicName = topicTicket.topic\nconst topics = global.get(\"TOPICS\") || new Map()\nconst topicStatus = topics.get(topicName) || new Map()\nconst topic = topicStatus.get(\"new\") || new Map()\ntopic.set(topicTicket.uuid,topicTicket)\ntopicStatus.set(\"new\", topic)\ntopics.set(topicName, topicStatus)\nglobal.set(\"TOPICS\", topics)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "crypto",
                "module": "crypto"
            }
        ],
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    }
]