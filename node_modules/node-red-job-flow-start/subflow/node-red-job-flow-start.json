{
    "id": "f6c57fcec804269c",
    "type": "subflow",
    "name": "flow-start",
    "info": "",
    "category": "Rate Control",
    "in": [
        {
            "x": 60,
            "y": 80,
            "wires": [
                {
                    "id": "e0410ad4c1884406"
                }
            ]
        }
    ],
    "out": [
        {
            "x": 340,
            "y": 60,
            "wires": [
                {
                    "id": "e0410ad4c1884406",
                    "port": 0
                }
            ]
        },
        {
            "x": 340,
            "y": 100,
            "wires": [
                {
                    "id": "e0410ad4c1884406",
                    "port": 1
                }
            ]
        }
    ],
    "env": [],
    "meta": {
        "module": "node-red-job-flow-start",
        "type": "flow-start",
        "version": "0.0.1",
        "license": "MIT"
    },
    "color": "#E6E0F8",
    "icon": "node-red/inject.svg",
    "flow": [
        {
            "id": "e0410ad4c1884406",
            "type": "function",
            "z": "f6c57fcec804269c",
            "name": "flow-start",
            "func": "//{topicname:[{name:\"\",status: \"new\"}]}\nconst flowstatus = global.get(\"FLOW_STATUS\") || new Map()\n\nconst topicTicket = msg.payload.topicTicket\nconst uuid = topicTicket.uuid\nif (flowstatus.has(uuid)) return [null, msg]\nflowstatus.set(uuid, topicTicket)\nglobal.set(\"FLOW_STATUS\", flowstatus)\nmsg.topicTicket = topicTicket\nmsg.topic = topicTicket.topic\nmsg.uuid = uuid\nreturn [msg, null]\n",
            "outputs": 2,
            "noerr": 0,
            "initialize": "",
            "finalize": "",
            "libs": [],
            "x": 200,
            "y": 80,
            "wires": [
                [],
                []
            ]
        }
    ]
}