apiVersion: v1
kind: Service
metadata:
  name: nodered-jobctl-service
spec:
  selector:
    app: nodered
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 1880
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodered-jobctl-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodered-jobctl
  template:
    metadata:
      labels:
        app: nodered-jobctl
    spec:
      containers:
      - name: nodered-jobctl-server
        image: nodered/node-red:latest
        env:
          - name: TZ
            value: "Asia/Tokyo"
          - name: NODE_RED_ENABLE_PROJECTS
            value: "false"
          - name: SERVICENAME
            value: "nodered-service"
          - name: CLUSTER_GROUP
            value: "test"
          - name: CLUSTER_ROLE
            value: "jobctl"
        volumeMounts:
          - name: nodered-data-store-volume
            mountPath: /data
          - name: nodered-workspace-volume
            mountPath: /workspace
          - name: nodered-output-volume
            mountPath: /output
        ports:
        - containerPort: 1880
        resources:
          requests:
            memory: 64Mi
            cpu: 250m
          limits:
            memory: 8Gi
            cpu: 500m
      volumes:
        - name: nodered-tmp-cache-volume
          emptyDir: {}
        - name: nodered-data-store-volume
          persistentVolumeClaim:
            claimName: nodered-data-pvc
        - name: nodered-workspace-volume
          persistentVolumeClaim:
            claimName: nodered-workspace-pvc
        - name: nodered-output-volume
          persistentVolumeClaim:
            claimName: nodered-output-pvc


